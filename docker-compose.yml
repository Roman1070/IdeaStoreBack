services:
  auth_go:
    build:
      context: .
      dockerfile: ./cmd/auth/Dockerfile
    ports:
      - "44000:44000"
    image: auth-go-image
    container_name: auth_go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./storage:/app/files
    depends_on:
      - pg_db

  ideas_go:
    build:
      context: .
      dockerfile: ./cmd/ideas/Dockerfile
    ports:
      - "44001:44001"
    image: ideas-go-image
    container_name: ideas_go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./storage:/app/files
      - ./images:/delivery/files
    depends_on:
      - pg_db

  profiles_go:
    build:
      context: .
      dockerfile: ./cmd/profiles/Dockerfile
    ports:
      - "44002:44002"
    image: profiles-go-image
    container_name: profiles_go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./storage:/app/files
    depends_on:
      - pg_db

  boards_go:
    build:
      context: .
      dockerfile: ./cmd/boards/Dockerfile
    ports:
      - "44003:44003"
    image: boards-go-image
    container_name: boards_go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./storage:/app/files
    depends_on:
      - pg_db

  comments_go:
    build:
      context: .
      dockerfile: ./cmd/comments/Dockerfile
    ports:
      - "44004:44004"
    image: comments-go-image
    container_name: comments_go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./storage:/app/files
    depends_on:
      - pg_db

  chats_go:
    build:
      context: .
      dockerfile: ./cmd/chats/Dockerfile
    ports:
      - "44005:44005"
    image: chats-go-image
    container_name: chats_go
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./storage:/app/files
    depends_on:
      - pg_db

  pg_db:
    image: postgres:16.4
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data/
    container_name: pg_db
    restart: unless-stopped
    networks:
      - app-network

volumes:
  pg_data:
  go_back:

networks:
  app-network:
    driver: bridge
